openapi: 3.0.1
info:
  title: Account and Transaction API Specification
  description: OpenAPI for Account and Transaction API Specification
  termsOfService: 'https://www.openbanking.org.uk/terms'
  contact:
    name: Service Desk
    email: ServiceDesk@openbanking.org.uk
  license:
    name: open-licence
    url: 'https://www.openbanking.org.uk/open-licence'
  version: v3.1.5
paths:
  /transactions:
    get:
      tags:
        - Transactions
      summary: Get Transactions
      operationId: GetTransactions
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - $ref: '#/components/parameters/FromBookingDateTimeParam'
        - $ref: '#/components/parameters/ToBookingDateTimeParam'
      responses:
        '200':
          $ref: '#/components/responses/200TransactionsRead'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - PSUOAuth2Security:
            - transactions
components:
  parameters:
    FromBookingDateTimeParam:
      in: query
      name: fromBookingDateTime
      description: >-
        The UTC ISO 8601 Date Time to filter transactions FROM
        NB Time component is optional - set to 00:00:00 for just Date.
        If the Date Time contains a timezone, the ASPSP must ignore the timezone
        component.
      schema:
        type: string
        format: date-time
    ToBookingDateTimeParam:
      in: query
      name: toBookingDateTime
      description: >-
        The UTC ISO 8601 Date Time to filter transactions TO
        NB Time component is optional - set to 00:00:00 for just Date.
        If the Date Time contains a timezone, the ASPSP must ignore the timezone
        component.
      schema:
        type: string
        format: date-time
    Authorization:
      in: header
      name: Authorization
      required: true
      description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
      schema:
        type: string
    x-customer-user-agent:
      in: header
      name: x-customer-user-agent
      description: Indicates the user-agent that the PSU is using.
      required: false
      schema:
        type: string
    x-fapi-customer-ip-address:
      in: header
      name: x-fapi-customer-ip-address
      required: false
      description: The PSU's IP address if the PSU is currently logged in with the TPP.
      schema:
        type: string
    x-fapi-auth-date:
      in: header
      name: x-fapi-auth-date
      required: false
      description: >-
        The time when the PSU last logged in with the TPP.
        All dates in the HTTP headers are represented as RFC 7231 Full Dates. An
        example is below:
        Sun, 10 Sep 2017 19:43:31 UTC
      schema:
        type: string
        pattern: >-
          ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
          (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
          \d{2}:\d{2}:\d{2} (GMT|UTC)$
    x-fapi-interaction-id:
      in: header
      name: x-fapi-interaction-id
      required: false
      description: An RFC4122 UID used as a correlation id.
      schema:
        type: string
  requestBodies:
    OBReadConsent1Param:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReadConsent1'
      required: true
  responses:
    200TransactionsRead:
      description: Transactions Read
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReadTransaction6'
    400Error:
      description: Bad request
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
    401Error:
      description: Unauthorized
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
    403Error:
      description: Forbidden
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
    404Error:
      description: Not found
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
    405Error:
      description: Method Not Allowed
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
    406Error:
      description: Not Acceptable
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
    415Error:
      description: Unsupported Media Type
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
    429Error:
      description: Too Many Requests
      headers:
        Retry-After:
          description: Number in seconds to wait
          schema:
            type: integer
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
    500Error:
      description: Internal Server Error
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
  schemas:
    AccountId:
      description: >-
        A unique and immutable identifier used to identify the account resource.
        This identifier has no meaning to the account owner.
      type: string
      minLength: 1
      maxLength: 40
    OBReadConsent1:
      type: object
      required:
        - Data
        - Risk
      properties:
        Data:
          type: object
          required:
            - Permissions
          properties:
            Permissions:
              type: array
              items:
                description: >-
                  Specifies the Open Banking account access data types. This is
                  a list of the data clusters being consented by the PSU, and
                  requested for authorisation with the ASPSP.
                type: string
                enum:
                  - ReadAccountsBasic
                  - ReadAccountsDetail
                  - ReadBalances
                  - ReadBeneficiariesBasic
                  - ReadBeneficiariesDetail
                  - ReadDirectDebits
                  - ReadOffers
                  - ReadPAN
                  - ReadParty
                  - ReadPartyPSU
                  - ReadProducts
                  - ReadScheduledPaymentsBasic
                  - ReadScheduledPaymentsDetail
                  - ReadStandingOrdersBasic
                  - ReadStandingOrdersDetail
                  - ReadStatementsBasic
                  - ReadStatementsDetail
                  - ReadTransactionsBasic
                  - ReadTransactionsCredits
                  - ReadTransactionsDebits
                  - ReadTransactionsDetail
              minItems: 1
            ExpirationDateTime:
              description: >-
                Specified date and time the permissions will expire.
                If this is not populated, the permissions will be open ended.All
                dates in the JSON payloads are represented in ISO 8601 date-time
                format.
                All date-time fields in responses must include the timezone. An
                example is below:
                2017-04-05T10:43:07+00:00
              type: string
              format: date-time
            TransactionFromDateTime:
              description: >-
                Specified start date and time for the transaction query period.
                If this is not populated, the start date will be open ended, and
                data will be returned from the earliest available
                transaction.All dates in the JSON payloads are represented in
                ISO 8601 date-time format.
                All date-time fields in responses must include the timezone. An
                example is below:
                2017-04-05T10:43:07+00:00
              type: string
              format: date-time
            TransactionToDateTime:
              description: >-
                Specified end date and time for the transaction query period.
                If this is not populated, the end date will be open ended, and
                data will be returned to the latest available transaction.All
                dates in the JSON payloads are represented in ISO 8601 date-time
                format.
                All date-time fields in responses must include the timezone. An
                example is below:
                2017-04-05T10:43:07+00:00
              type: string
              format: date-time
        Risk:
          $ref: '#/components/schemas/OBRisk2'
      additionalProperties: false
    OBError1:
      type: object
      properties:
        ErrorCode:
          description: 'Low level textual error code, e.g., UK.OBIE.Field.Missing'
          type: string
          x-namespaced-enum:
            - UK.OBIE.Field.Expected
            - UK.OBIE.Field.Invalid
            - UK.OBIE.Field.InvalidDate
            - UK.OBIE.Field.Missing
            - UK.OBIE.Field.Unexpected
            - UK.OBIE.Header.Invalid
            - UK.OBIE.Header.Missing
            - UK.OBIE.Reauthenticate
            - UK.OBIE.Resource.ConsentMismatch
            - UK.OBIE.Resource.InvalidConsentStatus
            - UK.OBIE.Resource.InvalidFormat
            - UK.OBIE.Resource.NotFound
            - UK.OBIE.Rules.AfterCutOffDateTime
            - UK.OBIE.Rules.DuplicateReference
            - UK.OBIE.Signature.Invalid
            - UK.OBIE.Signature.InvalidClaim
            - UK.OBIE.Signature.Malformed
            - UK.OBIE.Signature.Missing
            - UK.OBIE.Signature.MissingClaim
            - UK.OBIE.Signature.Unexpected
            - UK.OBIE.UnexpectedError
            - UK.OBIE.Unsupported.AccountIdentifier
            - UK.OBIE.Unsupported.AccountSecondaryIdentifier
            - UK.OBIE.Unsupported.Currency
            - UK.OBIE.Unsupported.Frequency
            - UK.OBIE.Unsupported.LocalInstrument
            - UK.OBIE.Unsupported.Scheme
        Message:
          description: >-
            A description of the error that occurred. e.g., 'A mandatory field
            isn't supplied' or 'RequestedExecutionDateTime must be in future'
            OBIE doesn't standardise this field
          type: string
          minLength: 1
          maxLength: 500
        Path:
          description: >-
            Recommended but optional reference to the JSON Path of the field
            with error, e.g., Data.Initiation.InstructedAmount.Currency
          type: string
          minLength: 1
          maxLength: 500
        Url:
          description: >-
            URL to help remediate the problem, or provide more information, or
            to API Reference, or help etc
          type: string
      required:
        - ErrorCode
        - Message
      additionalProperties: false
      minProperties: 1
    OBErrorResponse1:
      description: >-
        An array of detail error codes, and messages, and URLs to documentation
        to help remediation.
      type: object
      properties:
        Code:
          description: 'High level textual error code, to help categorize the errors.'
          type: string
          minLength: 1
          maxLength: 40
        Id:
          description: >-
            A unique reference for the error instance, for audit purposes, in
            case of unknown/unclassified errors.
          type: string
          minLength: 1
          maxLength: 40
        Message:
          description: >-
            Brief Error message, e.g., 'There is something wrong with the
            request parameters provided'
          type: string
          minLength: 1
          maxLength: 500
        Errors:
          items:
            $ref: '#/components/schemas/OBError1'
          type: array
          minItems: 1
      required:
        - Code
        - Message
        - Errors
      additionalProperties: false
    OBReadTransaction6:
      type: object
      required:
        - Data
      properties:
        Data:
          $ref: '#/components/schemas/OBReadDataTransaction6'
        Links:
          $ref: '#/components/schemas/Links'
        Meta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    OBRisk2:
      description: >-
        The Risk section is sent by the initiating party to the ASPSP. It is
        used to specify additional details for risk scoring for Account Info.
      type: object
      properties: {}
      additionalProperties: false
    Links:
      type: object
      description: Links relevant to the payload
      properties:
        Self:
          type: string
          format: uri
        First:
          type: string
          format: uri
        Prev:
          type: string
          format: uri
        Next:
          type: string
          format: uri
        Last:
          type: string
          format: uri
      additionalProperties: false
      required:
        - Self
    Meta:
      title: MetaData
      type: object
      description: Meta Data relevant to the payload
      properties:
        TotalPages:
          type: integer
          format: int32
        FirstAvailableDateTime:
          $ref: '#/components/schemas/ISODateTime'
        LastAvailableDateTime:
          $ref: '#/components/schemas/ISODateTime'
      additionalProperties: false
    OBReadDataTransaction6:
      type: object
      properties:
        Transaction:
          type: array
          items:
            $ref: '#/components/schemas/OBTransaction6'
      additionalProperties: false
    ISODateTime:
      description: >-
        All dates in the JSON payloads are represented in ISO 8601 date-time
        format.
        All date-time fields in responses must include the timezone. An example
        is below:
        2017-04-05T10:43:07+00:00
      type: string
      format: date-time
    OBTransaction6:
      oneOf:
        - $ref: '#/components/schemas/OBTransaction6Basic'
        - $ref: '#/components/schemas/OBTransaction6Detail'
    OBTransaction6Basic:
      type: object
      description: Provides further details on an entry in the report.
      required:
        - AccountId
        - CreditDebitIndicator
        - Status
        - BookingDateTime
        - Amount
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
        TransactionId:
          $ref: '#/components/schemas/TransactionId'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
        StatementReference:
          type: array
          items:
            $ref: '#/components/schemas/StatementReference'
        CreditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_1'
        Status:
          $ref: '#/components/schemas/OBEntryStatus1Code'
        TransactionMutability:
          $ref: '#/components/schemas/OBTransactionMutability1Code'
        BookingDateTime:
          $ref: '#/components/schemas/BookingDateTime'
        ValueDateTime:
          $ref: '#/components/schemas/ValueDateTime'
        AddressLine:
          $ref: '#/components/schemas/AddressLine'
        Amount:
          $ref: '#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_9'
        ChargeAmount:
          $ref: '#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_10'
        CurrencyExchange:
          $ref: '#/components/schemas/OBCurrencyExchange5'
        BankTransactionCode:
          $ref: '#/components/schemas/OBBankTransactionCodeStructure1'
        ProprietaryBankTransactionCode:
          $ref: '#/components/schemas/ProprietaryBankTransactionCodeStructure1'
        CardInstrument:
          $ref: '#/components/schemas/OBTransactionCardInstrument1'
        SupplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData1'
      additionalProperties: false
    OBTransaction6Detail:
      type: object
      description: Provides further details on an entry in the report.
      required:
        - AccountId
        - CreditDebitIndicator
        - Status
        - BookingDateTime
        - Amount
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
        TransactionId:
          $ref: '#/components/schemas/TransactionId'
        TransactionReference:
          $ref: '#/components/schemas/TransactionReference'
        StatementReference:
          type: array
          items:
            $ref: '#/components/schemas/StatementReference'
        CreditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_1'
        Status:
          $ref: '#/components/schemas/OBEntryStatus1Code'
        TransactionMutability:
          $ref: '#/components/schemas/OBTransactionMutability1Code'
        BookingDateTime:
          $ref: '#/components/schemas/BookingDateTime'
        ValueDateTime:
          $ref: '#/components/schemas/ValueDateTime'
        TransactionInformation:
          $ref: '#/components/schemas/TransactionInformation'
        AddressLine:
          $ref: '#/components/schemas/AddressLine'
        Amount:
          $ref: '#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_9'
        ChargeAmount:
          $ref: '#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_10'
        CurrencyExchange:
          $ref: '#/components/schemas/OBCurrencyExchange5'
        BankTransactionCode:
          $ref: '#/components/schemas/OBBankTransactionCodeStructure1'
        ProprietaryBankTransactionCode:
          $ref: '#/components/schemas/ProprietaryBankTransactionCodeStructure1'
        Balance:
          $ref: '#/components/schemas/OBTransactionCashBalance'
        MerchantDetails:
          $ref: '#/components/schemas/OBMerchantDetails1'
        CreditorAgent:
          $ref: >-
            #/components/schemas/OBBranchAndFinancialInstitutionIdentification6_1
        CreditorAccount:
          $ref: '#/components/schemas/OBCashAccount6_0'
        DebtorAgent:
          $ref: >-
            #/components/schemas/OBBranchAndFinancialInstitutionIdentification6_2
        DebtorAccount:
          $ref: '#/components/schemas/OBCashAccount6_1'
        CardInstrument:
          $ref: '#/components/schemas/OBTransactionCardInstrument1'
        SupplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData1'
      additionalProperties: false
    OBSupplementaryData1:
      type: object
      properties: {}
      additionalProperties: true
      description: >-
        Additional information that can not be captured in the structured fields
        and/or any other specific block.
    OBTransactionCardInstrument1:
      type: object
      required:
        - CardSchemeName
      description: Set of elements to describe the card instrument used in the transaction.
      properties:
        CardSchemeName:
          description: Name of the card scheme.
          type: string
          enum:
            - AmericanExpress
            - Diners
            - Discover
            - MasterCard
            - VISA
        AuthorisationType:
          description: The card authorisation type.
          type: string
          enum:
            - ConsumerDevice
            - Contactless
            - None
            - PIN
        Name:
          description: Name of the cardholder using the card instrument.
          type: string
          minLength: 1
          maxLength: 70
        Identification:
          description: >-
            Identification assigned by an institution to identify the card
            instrument used in the transaction. This identification is known by
            the account owner, and may be masked.
          type: string
          minLength: 1
          maxLength: 34
      additionalProperties: false
    OBCashAccount6_1:
      type: object
      description: >-
        Unambiguous identification of the account of the debtor, in the case of
        a crebit transaction.
      properties:
        SchemeName:
          $ref: '#/components/schemas/OBExternalAccountIdentification4Code'
        Identification:
          $ref: '#/components/schemas/Identification_0'
        Name:
          $ref: '#/components/schemas/Name_0'
        SecondaryIdentification:
          $ref: '#/components/schemas/SecondaryIdentification'
    OBBranchAndFinancialInstitutionIdentification6_2:
      type: object
      description: Financial institution servicing an account for the debtor.
      properties:
        SchemeName:
          $ref: >-
            #/components/schemas/OBExternalFinancialInstitutionIdentification4Code
        Identification:
          $ref: '#/components/schemas/Identification_2'
        Name:
          $ref: '#/components/schemas/Name_1'
        PostalAddress:
          $ref: '#/components/schemas/OBPostalAddress6'
    OBCashAccount6_0:
      type: object
      description: >-
        Unambiguous identification of the account of the creditor, in the case
        of a debit transaction.
      properties:
        SchemeName:
          $ref: '#/components/schemas/OBExternalAccountIdentification4Code'
        Identification:
          $ref: '#/components/schemas/Identification_0'
        Name:
          $ref: '#/components/schemas/Name_0'
        SecondaryIdentification:
          $ref: '#/components/schemas/SecondaryIdentification'
    OBBranchAndFinancialInstitutionIdentification6_1:
      type: object
      description: Financial institution servicing an account for the creditor.
      properties:
        SchemeName:
          $ref: >-
            #/components/schemas/OBExternalFinancialInstitutionIdentification4Code
        Identification:
          $ref: '#/components/schemas/Identification_2'
        Name:
          $ref: '#/components/schemas/Name_1'
        PostalAddress:
          $ref: '#/components/schemas/OBPostalAddress6'
    OBMerchantDetails1:
      type: object
      description: Details of the merchant involved in the transaction.
      properties:
        MerchantName:
          description: Name by which the merchant is known.
          type: string
          minLength: 1
          maxLength: 350
        MerchantCategoryCode:
          description: >-
            Category code conform to ISO 18245, related to the type of services
            or goods the merchant provides for the transaction.
          type: string
          minLength: 3
          maxLength: 4
    OBTransactionCashBalance:
      type: object
      required:
        - CreditDebitIndicator
        - Type
        - Amount
      description: >-
        Set of elements used to define the balance as a numerical representation
        of the net increases and decreases in an account after a transaction
        entry is applied to the account.
      properties:
        CreditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_2'
        Type:
          $ref: '#/components/schemas/OBBalanceType1Code'
        Amount:
          type: object
          required:
            - Amount
            - Currency
          description: >-
            Amount of money of the cash balance after a transaction entry is
            applied to the account..
          properties:
            Amount:
              $ref: '#/components/schemas/OBActiveCurrencyAndAmount_SimpleType'
            Currency:
              $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode_1'
      additionalProperties: false
    SecondaryIdentification:
      description: >-
        This is secondary identification of the account, as assigned by the
        account servicing institution.
        This can be used by building societies to additionally identify accounts
        with a roll number (in addition to a sort code and account number
        combination).
      type: string
      minLength: 1
      maxLength: 34
    Name_0:
      description: >-
        The account name is the name or names of the account owner(s)
        represented at an account level, as displayed by the ASPSP's online
        channels.
        Note, the account name is not the product name or the nickname of the
        account.
      type: string
      minLength: 1
      maxLength: 70
    Identification_0:
      description: >-
        Identification assigned by an institution to identify an account. This
        identification is known by the account owner.
      type: string
      minLength: 1
      maxLength: 256
    Identification_2:
      description: >-
        Unique and unambiguous identification of a financial institution or a
        branch of a financial institution.
      type: string
      minLength: 1
      maxLength: 35
    OBExternalAccountIdentification4Code:
      description: >-
        Name of the identification scheme, in a coded form as published in an
        external list.
      type: string
      x-namespaced-enum:
        - UK.OBIE.BBAN
        - UK.OBIE.IBAN
        - UK.OBIE.PAN
        - UK.OBIE.Paym
        - UK.OBIE.SortCodeAccountNumber
    OBPostalAddress6:
      type: object
      description: >-
        Information that locates and identifies a specific address, as defined
        by postal services.
      properties:
        AddressType:
          $ref: '#/components/schemas/OBAddressTypeCode'
        Department:
          description: Identification of a division of a large organisation or building.
          type: string
          minLength: 1
          maxLength: 70
        SubDepartment:
          description: >-
            Identification of a sub-division of a large organisation or
            building.
          type: string
          minLength: 1
          maxLength: 70
        StreetName:
          $ref: '#/components/schemas/StreetName'
        BuildingNumber:
          $ref: '#/components/schemas/BuildingNumber'
        PostCode:
          $ref: '#/components/schemas/PostCode'
        TownName:
          $ref: '#/components/schemas/TownName'
        CountrySubDivision:
          description: 'Identifies a subdivision of a country such as state, region, county.'
          type: string
          minLength: 1
          maxLength: 35
        Country:
          description: Nation with its own government.
          type: string
          pattern: '^[A-Z]{2,2}$'
        AddressLine:
          type: array
          items:
            description: >-
              Information that locates and identifies a specific address, as
              defined by postal services, presented in free format text.
            type: string
            minLength: 1
            maxLength: 70
          minItems: 0
          maxItems: 7
    Name_1:
      description: >-
        Name by which an agent is known and which is usually used to identify
        that agent.
      type: string
      minLength: 1
      maxLength: 140
    OBExternalFinancialInstitutionIdentification4Code:
      description: >-
        Name of the identification scheme, in a coded form as published in an
        external list.
      type: string
      x-namespaced-enum:
        - UK.OBIE.BICFI
    StreetName:
      description: Name of a street or thoroughfare.
      type: string
      minLength: 1
      maxLength: 70
    TownName:
      description: >-
        Name of a built-up area, with defined boundaries, and a local
        government.
      type: string
      minLength: 1
      maxLength: 35
    PostCode:
      description: >-
        Identifier consisting of a group of letters and/or numbers that is added
        to a postal address to assist the sorting of mail.
      type: string
      minLength: 1
      maxLength: 16
    BuildingNumber:
      description: Number that identifies the position of a building on a street.
      type: string
      minLength: 1
      maxLength: 16
    OBAddressTypeCode:
      description: Identifies the nature of the postal address.
      type: string
      enum:
        - Business
        - Correspondence
        - DeliveryTo
        - MailTo
        - POBox
        - Postal
        - Residential
        - Statement
    ActiveOrHistoricCurrencyCode_1:
      description: >-
        A code allocated to a currency by a Maintenance Agency under an
        international identification scheme, as described in the latest edition
        of the international standard ISO 4217 "Codes for the representation of
        currencies and funds".
      type: string
      pattern: '^[A-Z]{3,3}$'
    OBActiveCurrencyAndAmount_SimpleType:
      description: >-
        A number of monetary units specified in an active currency where the
        unit of currency is explicit and compliant with ISO 4217.
      type: string
      pattern: '^\d{1,13}$|^\d{1,13}\.\d{1,5}$'
    OBBalanceType1Code:
      description: 'Balance type, in a coded form.'
      type: string
      enum:
        - ClosingAvailable
        - ClosingBooked
        - ClosingCleared
        - Expected
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - InterimCleared
        - OpeningAvailable
        - OpeningBooked
        - OpeningCleared
        - PreviouslyClosedBooked
    OBCreditDebitCode_2:
      description: |-
        Indicates whether the balance is a credit or a debit balance.
        Usage: A zero balance is considered to be a credit balance.
      type: string
      enum:
        - Credit
        - Debit
    ProprietaryBankTransactionCodeStructure1:
      type: object
      required:
        - Code
      description: Set of elements to fully identify a proprietary bank transaction code.
      properties:
        Code:
          description: >-
            Proprietary bank transaction code to identify the underlying
            transaction.
          type: string
          minLength: 1
          maxLength: 35
        Issuer:
          description: >-
            Identification of the issuer of the proprietary bank transaction
            code.
          type: string
          minLength: 1
          maxLength: 35
      additionalProperties: false
    OBBankTransactionCodeStructure1:
      type: object
      required:
        - Code
        - SubCode
      description: >-
        Set of elements used to fully identify the type of underlying
        transaction resulting in an entry.
      properties:
        Code:
          description: Specifies the family within a domain.
          type: string
          minLength: 1
          maxLength: 4
        SubCode:
          description: Specifies the sub-product family within a specific family.
          type: string
          minLength: 1
          maxLength: 4
    OBCurrencyExchange5:
      type: object
      required:
        - SourceCurrency
        - ExchangeRate
      description: Set of elements used to provide details on the currency exchange.
      properties:
        SourceCurrency:
          description: >-
            Currency from which an amount is to be converted in a currency
            conversion.
          type: string
          pattern: '^[A-Z]{3,3}$'
        TargetCurrency:
          description: >-
            Currency into which an amount is to be converted in a currency
            conversion.
          type: string
          pattern: '^[A-Z]{3,3}$'
        UnitCurrency:
          description: >-
            Currency in which the rate of exchange is expressed in a currency
            exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
          type: string
          pattern: '^[A-Z]{3,3}$'
        ExchangeRate:
          description: >-
            Factor used to convert an amount from one currency into another.
            This reflects the price at which one currency was bought with
            another currency.
            Usage: ExchangeRate expresses the ratio between UnitCurrency and
            QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).
          type: number
        ContractIdentification:
          description: >-
            Unique identification to unambiguously identify the foreign exchange
            contract.
          type: string
          minLength: 1
          maxLength: 35
        QuotationDate:
          description: >-
            Date and time at which an exchange rate is quoted.All dates in the
            JSON payloads are represented in ISO 8601 date-time format.
            All date-time fields in responses must include the timezone. An
            example is below:
            2017-04-05T10:43:07+00:00
          type: string
          format: date-time
        InstructedAmount:
          type: object
          required:
            - Amount
            - Currency
          description: >-
            Amount of money to be moved between the debtor and creditor, before
            deduction of charges, expressed in the currency as ordered by the
            initiating party.
          properties:
            Amount:
              $ref: '#/components/schemas/OBActiveCurrencyAndAmount_SimpleType'
            Currency:
              $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode_1'
    OBActiveOrHistoricCurrencyAndAmount_10:
      type: object
      required:
        - Amount
        - Currency
      description: Transaction charges to be paid by the charge bearer.
      properties:
        Amount:
          $ref: '#/components/schemas/OBActiveCurrencyAndAmount_SimpleType'
        Currency:
          $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode_1'
    OBActiveOrHistoricCurrencyAndAmount_9:
      type: object
      required:
        - Amount
        - Currency
      description: Amount of money in the cash transaction entry.
      properties:
        Amount:
          $ref: '#/components/schemas/OBActiveCurrencyAndAmount_SimpleType'
        Currency:
          $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode_1'
    AddressLine:
      description: >-
        Information that locates and identifies a specific address for a
        transaction entry, that is presented in free format text.
      type: string
      minLength: 1
      maxLength: 70
    TransactionInformation:
      description: |-
        Further details of the transaction.
        This is the transaction narrative, which is unstructured text.
      type: string
      minLength: 1
      maxLength: 500
    ValueDateTime:
      description: >-
        Date and time at which assets become available to the account owner in
        case of a credit entry, or cease to be available to the account owner in
        case of a debit transaction entry.
        Usage: If transaction entry status is pending and value date is present,
        then the value date refers to an expected/requested value date.
        For transaction entries subject to availability/float and for which
        availability information is provided, the value date must not be used.
        In this case the availability component identifies the number of
        availability days.All dates in the JSON payloads are represented in ISO
        8601 date-time format.
        All date-time fields in responses must include the timezone. An example
        is below:
        2017-04-05T10:43:07+00:00
      type: string
      format: date-time
    BookingDateTime:
      description: >-
        Date and time when a transaction entry is posted to an account on the
        account servicer's books.
        Usage: Booking date is the expected booking date, unless the status is
        booked, in which case it is the actual booking date.All dates in the
        JSON payloads are represented in ISO 8601 date-time format.
        All date-time fields in responses must include the timezone. An example
        is below:
        2017-04-05T10:43:07+00:00
      type: string
      format: date-time
    OBTransactionMutability1Code:
      description: Specifies the Mutability of the Transaction record.
      type: string
      enum:
        - Mutable
        - Immutable
    OBEntryStatus1Code:
      description: Status of a transaction entry on the books of the account servicer.
      type: string
      enum:
        - Booked
        - Pending
    OBCreditDebitCode_1:
      description: Indicates whether the transaction is a credit or a debit entry.
      type: string
      enum:
        - Credit
        - Debit
    StatementReference:
      description: >-
        Unique reference for the statement. This reference may be optionally
        populated if available.
      type: string
      minLength: 1
      maxLength: 35
    TransactionReference:
      description: >-
        Unique reference for the transaction. This reference is optionally
        populated, and may as an example be the FPID in the Faster Payments
        context.
      type: string
      minLength: 1
      maxLength: 210
    TransactionId:
      description: >-
        Unique identifier for the transaction within an servicing institution.
        This identifier is both unique and immutable.
      type: string
      minLength: 1
      maxLength: 210

  securitySchemes:
    TPPOAuth2Security:
      type: oauth2
      description: TPP client credential authorisation flow with the ASPSP
      flows:
        clientCredentials:
          tokenUrl: 'https://authserver.example/token'
          scopes:
            transactions: Ability to read Transaction information
    PSUOAuth2Security:
      type: oauth2
      description: >-
        OAuth flow, it is required when the PSU needs to perform SCA with the
        ASPSP when a TPP wants to access an ASPSP resource owned by the PSU
      flows:
        authorizationCode:
          authorizationUrl: 'https://authserver.example/authorization'
          tokenUrl: 'https://authserver.example/token'
          scopes:
            transactions: Ability to read Transaction information